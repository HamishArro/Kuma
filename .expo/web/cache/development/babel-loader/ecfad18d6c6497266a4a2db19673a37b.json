{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/hamisharro/Documents/Projects/My Portfolio/JavaScript/Kuma/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { GLView } from \"expo-gl\";\nimport { Renderer } from \"expo-three\";\nimport { TweenMax } from \"gsap\";\nimport { AmbientLight, SphereGeometry, Fog, GridHelper, Mesh, MeshStandardMaterial, PerspectiveCamera, PointLight, Scene, SpotLight } from \"three\";\nexport default function App() {\n  var sphere = new SphereMesh();\n  var camera = new PerspectiveCamera(100, 0.4, 0.01, 1000);\n  var cameraInitialPositionX = 0;\n  var cameraInitialPositionY = 2;\n  var cameraInitialPositionZ = 5;\n\n  function move(distance) {\n    TweenMax.to(sphere.position, 0.2, {\n      z: sphere.position.z + distance\n    });\n    TweenMax.to(camera.position, 0.2, {\n      z: camera.position.z + distance\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(GLView, {\n    style: {\n      flex: 1\n    },\n    onContextCreate: function _callee(gl) {\n      var width, height, renderer, scene, ambientLight, render;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              width = gl.drawingBufferWidth, height = gl.drawingBufferHeight;\n              renderer = new Renderer({\n                gl: gl\n              });\n              renderer.setSize(width, height);\n              renderer.setClearColor(\"#fff\");\n              scene = new Scene();\n              scene.fog = new Fog(\"#3A96C4\", 1, 10000);\n              scene.add(new GridHelper(10, 10));\n              ambientLight = new AmbientLight(0x101010);\n              scene.add(ambientLight);\n              scene.add(sphere);\n              camera.position.set(cameraInitialPositionX, cameraInitialPositionY, cameraInitialPositionZ);\n              camera.lookAt(sphere.position);\n\n              render = function render() {\n                requestAnimationFrame(render);\n                renderer.render(scene, camera);\n                gl.endFrameEXP();\n              };\n\n              render();\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPressIn: function onPressIn() {\n      return move(-0.2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 36,\n      MozUserSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      msUserSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"UP\")), React.createElement(TouchableWithoutFeedback, {\n    onPressIn: function onPressIn() {\n      return move(0.2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 36,\n      MozUserSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      msUserSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"DOWN\")))));\n}\n\nvar SphereMesh = function (_Mesh) {\n  _inherits(SphereMesh, _Mesh);\n\n  var _super = _createSuper(SphereMesh);\n\n  function SphereMesh() {\n    _classCallCheck(this, SphereMesh);\n\n    return _super.call(this, new SphereGeometry(0, 50, 20, 0, Math.PI * 2, 0, Math.PI * 2), new MeshStandardMaterial({\n      color: 0xff0000\n    }));\n  }\n\n  return SphereMesh;\n}(Mesh);","map":{"version":3,"sources":["/Users/hamisharro/Documents/Projects/My Portfolio/JavaScript/Kuma/App.js"],"names":["React","GLView","Renderer","TweenMax","AmbientLight","SphereGeometry","Fog","GridHelper","Mesh","MeshStandardMaterial","PerspectiveCamera","PointLight","Scene","SpotLight","App","sphere","SphereMesh","camera","cameraInitialPositionX","cameraInitialPositionY","cameraInitialPositionZ","move","distance","to","position","z","flex","gl","width","drawingBufferWidth","height","drawingBufferHeight","renderer","setSize","setClearColor","scene","fog","add","ambientLight","set","lookAt","render","requestAnimationFrame","endFrameEXP","fontSize","MozUserSelect","WebkitUserSelect","msUserSelect","Math","PI","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View, TouchableWithoutFeedback, Text } from \"react-native\";\n\nimport { GLView } from \"expo-gl\";\nimport { Renderer } from \"expo-three\";\nimport { TweenMax } from \"gsap\";\n\nimport {\n  AmbientLight,\n  SphereGeometry,\n  Fog,\n  GridHelper,\n  Mesh,\n  MeshStandardMaterial,\n  PerspectiveCamera,\n  PointLight,\n  Scene,\n  SpotLight,\n} from \"three\";\n\nexport default function App() {\n  const sphere = new SphereMesh();\n  const camera = new PerspectiveCamera(100, 0.4, 0.01, 1000);\n\n  let cameraInitialPositionX = 0;\n  let cameraInitialPositionY = 2;\n  let cameraInitialPositionZ = 5;\n\n  function move(distance) {\n    TweenMax.to(sphere.position, 0.2, {\n      z: sphere.position.z + distance,\n    });\n\n    TweenMax.to(camera.position, 0.2, {\n      z: camera.position.z + distance,\n    });\n  }\n\n  return (\n    <View style={{ flex: 1 }}>\n      <GLView\n        style={{ flex: 1 }}\n        onContextCreate={async (gl) => {\n          // GL Parameter disruption\n          const { drawingBufferWidth: width, drawingBufferHeight: height } = gl;\n\n          // Renderer declaration and set properties\n          const renderer = new Renderer({ gl });\n          renderer.setSize(width, height);\n          renderer.setClearColor(\"#fff\");\n\n          // Scene declaration, add a fog, and a grid helper to see axes dimensions\n          const scene = new Scene();\n          scene.fog = new Fog(\"#3A96C4\", 1, 10000);\n          scene.add(new GridHelper(10, 10));\n\n          // Add all necessary lights\n          const ambientLight = new AmbientLight(0x101010);\n          scene.add(ambientLight);\n\n          // Add sphere object instance to our scene\n          scene.add(sphere);\n\n          // Set camera position and look to sphere\n          camera.position.set(\n            cameraInitialPositionX,\n            cameraInitialPositionY,\n            cameraInitialPositionZ\n          );\n\n          camera.lookAt(sphere.position);\n\n          // Render function\n          const render = () => {\n            requestAnimationFrame(render);\n            renderer.render(scene, camera);\n            gl.endFrameEXP();\n          };\n          render();\n        }}\n      >\n        <View>\n          <TouchableWithoutFeedback onPressIn={() => move(-0.2)}>\n            <Text\n              style={{\n                fontSize: 36,\n                MozUserSelect: \"none\",\n                WebkitUserSelect: \"none\",\n                msUserSelect: \"none\",\n              }}\n            >\n              UP\n            </Text>\n          </TouchableWithoutFeedback>\n          <TouchableWithoutFeedback onPressIn={() => move(0.2)}>\n            <Text\n              style={{\n                fontSize: 36,\n                MozUserSelect: \"none\",\n                WebkitUserSelect: \"none\",\n                msUserSelect: \"none\",\n              }}\n            >\n              DOWN\n            </Text>\n          </TouchableWithoutFeedback>\n        </View>\n      </GLView>\n    </View>\n  );\n}\n\nclass SphereMesh extends Mesh {\n  constructor() {\n    super(\n      new SphereGeometry(0, 50, 20, 0, Math.PI * 2, 0, Math.PI * 2),\n      new MeshStandardMaterial({\n        color: 0xff0000,\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}